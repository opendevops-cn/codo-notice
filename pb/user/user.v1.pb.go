// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.27.1
// source: pb/user/user.v1.proto

package user

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/Ccheers/protoc-gen-go-kratos-http/khttp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// User 用户信息
type UserDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户ID，主键
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 创建时间
	CreatedAt string `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新时间
	UpdatedAt string `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// 名称，最大长度128
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	// 昵称，最大长度128
	Nickname string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 用户标识，唯一且不为空，最大长度128
	UserId string `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 部门标识，最大长度2048
	DepId string `protobuf:"bytes,7,opt,name=dep_id,json=depId,proto3" json:"dep_id,omitempty"`
	// 部门名称，最大长度2048
	Dep string `protobuf:"bytes,8,opt,name=dep,proto3" json:"dep,omitempty"`
	// 管理者，最大长度128
	Manager string `protobuf:"bytes,9,opt,name=manager,proto3" json:"manager,omitempty"`
	// 头像URL，最大长度1024
	Avatar string `protobuf:"bytes,10,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 是否激活，默认为true
	Active bool `protobuf:"varint,11,opt,name=active,proto3" json:"active,omitempty"`
	// 手机号码，最大长度32
	Tel string `protobuf:"bytes,12,opt,name=tel,proto3" json:"tel,omitempty"`
	// 邮箱地址，最大长度128
	Email string `protobuf:"bytes,13,opt,name=email,proto3" json:"email,omitempty"`
	// 源数据，用于存储额外的动态数据
	DataSource *structpb.Struct `protobuf:"bytes,14,opt,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
	// 是否禁用，默认为false
	Disable bool `protobuf:"varint,15,opt,name=disable,proto3" json:"disable,omitempty"`
	// 钉钉ID，最大长度128
	DdId string `protobuf:"bytes,16,opt,name=dd_id,json=ddId,proto3" json:"dd_id,omitempty"`
	// 飞书ID，最大长度128
	FsId string `protobuf:"bytes,17,opt,name=fs_id,json=fsId,proto3" json:"fs_id,omitempty"`
}

func (x *UserDTO) Reset() {
	*x = UserDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_user_user_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDTO) ProtoMessage() {}

func (x *UserDTO) ProtoReflect() protoreflect.Message {
	mi := &file_pb_user_user_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDTO.ProtoReflect.Descriptor instead.
func (*UserDTO) Descriptor() ([]byte, []int) {
	return file_pb_user_user_v1_proto_rawDescGZIP(), []int{0}
}

func (x *UserDTO) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserDTO) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UserDTO) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *UserDTO) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserDTO) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserDTO) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserDTO) GetDepId() string {
	if x != nil {
		return x.DepId
	}
	return ""
}

func (x *UserDTO) GetDep() string {
	if x != nil {
		return x.Dep
	}
	return ""
}

func (x *UserDTO) GetManager() string {
	if x != nil {
		return x.Manager
	}
	return ""
}

func (x *UserDTO) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserDTO) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *UserDTO) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *UserDTO) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserDTO) GetDataSource() *structpb.Struct {
	if x != nil {
		return x.DataSource
	}
	return nil
}

func (x *UserDTO) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

func (x *UserDTO) GetDdId() string {
	if x != nil {
		return x.DdId
	}
	return ""
}

func (x *UserDTO) GetFsId() string {
	if x != nil {
		return x.FsId
	}
	return ""
}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_user_user_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_user_user_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_pb_user_user_v1_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 每页条数
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// 第几页
	PageNum int32 `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	// 正序或倒序 ascend  descend
	Order string `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`
	// 全局搜索关键字
	SearchText string `protobuf:"bytes,4,opt,name=search_text,json=searchText,proto3" json:"search_text,omitempty"`
	// 搜索字段
	SearchField string `protobuf:"bytes,5,opt,name=search_field,json=searchField,proto3" json:"search_field,omitempty"`
	// 排序关键字
	Field string `protobuf:"bytes,6,opt,name=field,proto3" json:"field,omitempty"`
	// yes:缓存，no:不缓存
	Cache string `protobuf:"bytes,7,opt,name=cache,proto3" json:"cache,omitempty"`
	// 多字段搜索,精准匹配
	FilterMap *structpb.Struct `protobuf:"bytes,8,opt,name=filter_map,json=filterMap,proto3" json:"filter_map,omitempty"`
}

func (x *ListUserRequest) Reset() {
	*x = ListUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_user_user_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRequest) ProtoMessage() {}

func (x *ListUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_user_user_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRequest.ProtoReflect.Descriptor instead.
func (*ListUserRequest) Descriptor() ([]byte, []int) {
	return file_pb_user_user_v1_proto_rawDescGZIP(), []int{2}
}

func (x *ListUserRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListUserRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *ListUserRequest) GetSearchText() string {
	if x != nil {
		return x.SearchText
	}
	return ""
}

func (x *ListUserRequest) GetSearchField() string {
	if x != nil {
		return x.SearchField
	}
	return ""
}

func (x *ListUserRequest) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ListUserRequest) GetCache() string {
	if x != nil {
		return x.Cache
	}
	return ""
}

func (x *ListUserRequest) GetFilterMap() *structpb.Struct {
	if x != nil {
		return x.FilterMap
	}
	return nil
}

type ListUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户列表
	Data []*UserDTO `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	// 总数
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ListUserReply) Reset() {
	*x = ListUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_user_user_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserReply) ProtoMessage() {}

func (x *ListUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_user_user_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserReply.ProtoReflect.Descriptor instead.
func (*ListUserReply) Descriptor() ([]byte, []int) {
	return file_pb_user_user_v1_proto_rawDescGZIP(), []int{3}
}

func (x *ListUserReply) GetData() []*UserDTO {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListUserReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_pb_user_user_v1_proto protoreflect.FileDescriptor

var file_pb_user_user_v1_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x62, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x6f, 0x70, 0x73, 0x2e, 0x63, 0x6f, 0x64,
	0x6f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6b, 0x68,
	0x74, 0x74, 0x70, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x03, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x44, 0x54, 0x4f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x64, 0x65, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x70, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x13,
	0x0a, 0x05, 0x64, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x64, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x66, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x73, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x87, 0x02, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x12, 0x36, 0x0a, 0x0a,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4d, 0x61, 0x70, 0x22, 0x5b, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x63, 0x6f, 0x64, 0x6f, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x54, 0x4f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x32, 0x8c, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x82, 0x01, 0x0a, 0x08, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x63, 0x6f,
	0x64, 0x6f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x63, 0x6f, 0x64, 0x6f, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0xc2, 0xdb, 0xaa, 0x03, 0x0f,
	0x0a, 0x0d, 0x4a, 0x57, 0x54, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x7f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x6f, 0x70, 0x73,
	0x2e, 0x63, 0x6f, 0x64, 0x6f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x63, 0x6f, 0x64, 0x6f, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x54, 0x4f, 0x22, 0x29, 0xc2, 0xdb, 0xaa, 0x03, 0x0f, 0x0a, 0x0d, 0x4a, 0x57,
	0x54, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x42, 0x15, 0x5a, 0x13, 0x63, 0x6f, 0x64, 0x6f, 0x2d, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2f,
	0x70, 0x62, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_user_user_v1_proto_rawDescOnce sync.Once
	file_pb_user_user_v1_proto_rawDescData = file_pb_user_user_v1_proto_rawDesc
)

func file_pb_user_user_v1_proto_rawDescGZIP() []byte {
	file_pb_user_user_v1_proto_rawDescOnce.Do(func() {
		file_pb_user_user_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_user_user_v1_proto_rawDescData)
	})
	return file_pb_user_user_v1_proto_rawDescData
}

var file_pb_user_user_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pb_user_user_v1_proto_goTypes = []interface{}{
	(*UserDTO)(nil),         // 0: ops.codo.notice.user.v1.UserDTO
	(*GetUserRequest)(nil),  // 1: ops.codo.notice.user.v1.GetUserRequest
	(*ListUserRequest)(nil), // 2: ops.codo.notice.user.v1.ListUserRequest
	(*ListUserReply)(nil),   // 3: ops.codo.notice.user.v1.ListUserReply
	(*structpb.Struct)(nil), // 4: google.protobuf.Struct
}
var file_pb_user_user_v1_proto_depIdxs = []int32{
	4, // 0: ops.codo.notice.user.v1.UserDTO.data_source:type_name -> google.protobuf.Struct
	4, // 1: ops.codo.notice.user.v1.ListUserRequest.filter_map:type_name -> google.protobuf.Struct
	0, // 2: ops.codo.notice.user.v1.ListUserReply.data:type_name -> ops.codo.notice.user.v1.UserDTO
	2, // 3: ops.codo.notice.user.v1.User.ListUser:input_type -> ops.codo.notice.user.v1.ListUserRequest
	1, // 4: ops.codo.notice.user.v1.User.GetUser:input_type -> ops.codo.notice.user.v1.GetUserRequest
	3, // 5: ops.codo.notice.user.v1.User.ListUser:output_type -> ops.codo.notice.user.v1.ListUserReply
	0, // 6: ops.codo.notice.user.v1.User.GetUser:output_type -> ops.codo.notice.user.v1.UserDTO
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pb_user_user_v1_proto_init() }
func file_pb_user_user_v1_proto_init() {
	if File_pb_user_user_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_user_user_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_user_user_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_user_user_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_user_user_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_user_user_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_user_user_v1_proto_goTypes,
		DependencyIndexes: file_pb_user_user_v1_proto_depIdxs,
		MessageInfos:      file_pb_user_user_v1_proto_msgTypes,
	}.Build()
	File_pb_user_user_v1_proto = out.File
	file_pb_user_user_v1_proto_rawDesc = nil
	file_pb_user_user_v1_proto_goTypes = nil
	file_pb_user_user_v1_proto_depIdxs = nil
}
